version: '3.8'

services:
  app:
    build: .
    container_name: social-scraper-app
    restart: unless-stopped
    ports:
      - "${PORT:-3030}:3030"
    volumes:
      - telegram_sessions:/app/telegram_sessions
      - media_downloads:/app/media_downloads
      - logs:/app/logs
      - data:/app/data
      - ./users.db:/app/users.db
      - ./secrets:/app/secrets
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PORT=3030
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  redis:
    image: redis:7-alpine
    container_name: social-scraper-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  redis_data:
    driver: local
  telegram_sessions:
    driver: local
  media_downloads:
    driver: local
  logs:
    driver: local
  data:
    driver: local

networks:
  app-network:
    driver: bridge
    
secrets:
  aws_access_key:
    file: ./secrets/aws_access_key.txt
  aws_secret_key:
    file: ./secrets/aws_secret_key.txt
  encryption_key:
    file: ./secrets/encryption_key.txt
  admin_key:
    file: ./secrets/admin_key.txt 